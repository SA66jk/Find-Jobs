package com.example.controller;import com.example.exception.CustomException;import com.example.common.Result;import com.example.common.ResultCode;import com.example.entity.*;import com.example.service.*;import com.example.service.impl.CollectServiceImpl;import com.example.vo.YonghuxinxiVo;import com.example.vo.GangweixinxiVo;import com.example.vo.XiaoxitongzhiVo;import com.example.vo.QiyexinxiVo;import com.example.vo.JianlixinxiVo;import com.example.vo.JianlitoudiVo;import com.example.vo.PinglunVo;import com.example.vo.BianhuantuVo;import com.example.vo.XinwentongzhiVo;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.*;import javax.annotation.Resource;import java.util.List;@RestController@RequestMapping(value = "/front")public class FrontController {    @Autowiredprivate YonghuxinxiService  yonghuxinxiService;@Autowiredprivate GangweixinxiService  gangweixinxiService;@Autowiredprivate XiaoxitongzhiService  xiaoxitongzhiService;@Autowiredprivate QiyexinxiService  qiyexinxiService;@Autowiredprivate JianlixinxiService  jianlixinxiService;@Autowiredprivate JianlitoudiService  jianlitoudiService;    @Autowired    private PinglunService pinglunService;	@Autowired    private BianhuantuService  bianhuantuService;    @Autowired    private XinwentongzhiService  xinwentongzhiService;    @Autowired    private LiuyanbanService liuyanbanService;    @Resource    private CollectServiceImpl collectService;	@GetMapping("/getyonghuxinxidetail/{id}")public Result getyonghuxinxidetail(@PathVariable Integer id) {	return Result.success(yonghuxinxiService.findById(id));}@PostMapping("/yonghuxinxi")public Result<YonghuxinxiVo> yonghuxinxi(@RequestBody YonghuxinxiVo yonghuxinxiVo) {return Result.success(yonghuxinxiService.findPage(yonghuxinxiVo));}@PostMapping("/zhuceyonghuxinxi")public Result zhuceyonghuxinxi(@RequestBody Yonghuxinxi yonghuxinxi) {yonghuxinxiService.add(yonghuxinxi);return Result.success();}@PostMapping("/findyonghuxinxiyonghuming")public Result findyonghuxinxiyonghuming(@RequestBody Yonghuxinxi yonghuxinxi) {yonghuxinxiService.findyonghuxinxiyonghuming(yonghuxinxi);return Result.success();}@PostMapping("/loginyonghuxinxi")public Result loginyonghuxinxi(@RequestBody Yonghuxinxi yonghuxinxi) {return Result.success(yonghuxinxiService.login(yonghuxinxi));}@GetMapping("/getgangweixinxidetail/{id}")public Result getgangweixinxidetail(@PathVariable Integer id) {	return Result.success(gangweixinxiService.findById(id));}@PostMapping("/gangweixinxi")public Result<GangweixinxiVo> gangweixinxi(@RequestBody GangweixinxiVo gangweixinxiVo) {return Result.success(gangweixinxiService.findPage(gangweixinxiVo));}@GetMapping("/getqiyexinxidetail/{id}")public Result getqiyexinxidetail(@PathVariable Integer id) {	return Result.success(qiyexinxiService.findById(id));}@PostMapping("/qiyexinxi")public Result<QiyexinxiVo> qiyexinxi(@RequestBody QiyexinxiVo qiyexinxiVo) {return Result.success(qiyexinxiService.findPage(qiyexinxiVo));}@PostMapping("/zhuceqiyexinxi")public Result zhuceqiyexinxi(@RequestBody Qiyexinxi qiyexinxi) {qiyexinxiService.add(qiyexinxi);return Result.success();}@PostMapping("/findqiyexinxiqiyehao")public Result findqiyexinxiqiyehao(@RequestBody Qiyexinxi qiyexinxi) {qiyexinxiService.findqiyexinxiqiyehao(qiyexinxi);return Result.success();}@PostMapping("/loginqiyexinxi")public Result loginqiyexinxi(@RequestBody Qiyexinxi qiyexinxi) {return Result.success(qiyexinxiService.login(qiyexinxi));}@GetMapping("/getjianlixinxidetail/{id}")public Result getjianlixinxidetail(@PathVariable Integer id) {	return Result.success(jianlixinxiService.findById(id));}@PostMapping("/jianlixinxi")public Result<JianlixinxiVo> jianlixinxi(@RequestBody JianlixinxiVo jianlixinxiVo) {return Result.success(jianlixinxiService.findPage(jianlixinxiVo));}@GetMapping("/getjianlitoudidetail/{id}")public Result getjianlitoudidetail(@PathVariable Integer id) {	return Result.success(jianlitoudiService.findById(id));}@PostMapping("/postjianlitoudi")public Result<Jianlitoudi> postjianlitoudi(@RequestBody Jianlitoudi jianlitoudi) {return Result.success(jianlitoudiService.add(jianlitoudi));}		@PostMapping("/postpinglun")    public Result<Pinglun> postpinglun(@RequestBody Pinglun pinglun) {        return Result.success(pinglunService.add(pinglun));    }    @PostMapping("/pinglun")    public Result<PinglunVo> pinglun(@RequestBody PinglunVo pinglunVo) {        return Result.success(pinglunService.findPage(pinglunVo));    }		@GetMapping("/bianhuantu")    public Result bianhuantu() {        return Result.success(bianhuantuService.list());    }       @GetMapping("/xinwentongzhi")    public Result xinwentongzhi() {        return Result.success(xinwentongzhiService.list());    }    @GetMapping("/getxinwentongzhi/{id}")    public Result getxinwentongzhi(@PathVariable Integer id) {        return Result.success(xinwentongzhiService.findById(id));    }    @PostMapping("/addLiuyan")    public Result addComment(@RequestBody Liuyanban liuyanban) {        liuyanbanService.add(liuyanban);        return Result.success();    }    @GetMapping("/getLiuyan")    public Result<List<Liuyanban>> getCommentTiezi() {        return Result.success(liuyanbanService.getLiuyan());    }    @PostMapping("/addCollect")    public Result addCollect(@RequestBody Collect collect) {        Collect collect1 = collectService.add(collect);        if(collect1  == null){            return Result.success("Please do not duplicate favorites");        }        return Result.success();    }    @DeleteMapping("/deleteCollect/{id}")    public Result deleteCollect(@PathVariable Integer id) {        collectService.delete(id);        return Result.success();    }	@PostMapping("/getUserCollect")    public Result getUserCollect(@RequestBody Collect collect) {        return Result.success(collectService.findFrontPages(collect.getUserId()));    }    @DeleteMapping("/deleteCollect/{id}/{userId}")    public Result deleteCollect(@PathVariable Integer id,@PathVariable Integer userId) {        collectService.deleteByUserId(id,userId);        return Result.success();    }		@PutMapping("/yonghuxinxi")public Result updateYonghuxinxi(@RequestBody YonghuxinxiVo yonghuxinxi) {yonghuxinxiService.update(yonghuxinxi);return Result.success();}@PutMapping("/gangweixinxi")public Result updateGangweixinxi(@RequestBody GangweixinxiVo gangweixinxi) {gangweixinxiService.update(gangweixinxi);return Result.success();}@PutMapping("/xiaoxitongzhi")public Result updateXiaoxitongzhi(@RequestBody XiaoxitongzhiVo xiaoxitongzhi) {xiaoxitongzhiService.update(xiaoxitongzhi);return Result.success();}@PutMapping("/qiyexinxi")public Result updateQiyexinxi(@RequestBody QiyexinxiVo qiyexinxi) {qiyexinxiService.update(qiyexinxi);return Result.success();}@PutMapping("/jianlixinxi")public Result updateJianlixinxi(@RequestBody JianlixinxiVo jianlixinxi) {jianlixinxiService.update(jianlixinxi);return Result.success();}@PutMapping("/jianlitoudi")public Result updateJianlitoudi(@RequestBody JianlitoudiVo jianlitoudi) {jianlitoudiService.update(jianlitoudi);return Result.success();}}